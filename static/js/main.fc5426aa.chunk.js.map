{"version":3,"sources":["ChartBox.js","App.js","index.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","ChartBox","type","elements","useState","chartType","chartElements","console","log","labels","map","e","i","colors","Math","floor","random","data","datasets","backgroundColor","borderColor","borderWidth","App","setData","useEffect","getData","a","axios","get","response","entry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAaAA,IAAQC,SACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAkDaC,MA/Cf,YAAoC,IAAjBC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,SAElB,EAAiCC,mBAASF,GAA1C,mBAAOG,EAAP,KACA,GADA,KACyCD,mBAASD,IAAlD,mBAAOG,EAAP,UAIAC,QAAQC,IAAIH,EAAUC,GACtB,IAAMG,EAASH,EAAcI,KAAI,SAACC,EAAEC,GAAH,MAAO,UAAUA,KAC5CC,EAASP,EAAcI,KAAI,SAAAC,GAI/B,MAAO,OAHGG,KAAKC,MAAsB,IAAhBD,KAAKE,UAGN,IAFVF,KAAKC,MAAsB,IAAhBD,KAAKE,UAEI,IADpBF,KAAKC,MAAsB,IAAhBD,KAAKE,UACc,OAEpCC,EAAmB,QAAZZ,EAAkB,CAC7BI,SACAS,SAAU,CACR,CACED,KAAMX,EACNa,gBAAiB,6BAGrB,CACAV,SACAS,SAAU,CACR,CACED,KAAMX,EACNa,gBAAiBN,EACjBO,YAAaP,EACbQ,YAAa,KAOrB,OACA,8BACI,8BACiB,QAAZhB,EAAkB,cAAC,IAAD,CAAKY,KAAMA,IAAQ,cAAC,IAAD,CAAKA,KAAQA,S,iBCjChDK,MA1Bf,WACE,MAAwBlB,mBAAS,IAAjC,mBAAOa,EAAP,KAAaM,EAAb,KAEAC,qBAAU,kBACRC,MAAU,IAEZ,IACMA,EAAO,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAFd,4EACD,OACRC,EADQ,OAEdN,EAAQM,EAASZ,MAFH,2CAAH,qDAMb,OACE,mCACCA,EAAKP,KAAI,SAACoB,GACT,OACA,cAAC,EAAD,CAAU5B,KAAM4B,EAAM5B,KAAMC,SAAY2B,EAAM3B,iBCfpD4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc5426aa.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from 'chart.js';\r\nimport { Bar,Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction ChartBox({type,elements}) {\r\n\r\n      const [chartType,setChartType] = useState(type)\r\n      const [chartElements,setChartElements] = useState(elements)\r\n\r\n      const handleChange = (e) => {setChartType(e.target.value)}\r\n\r\n      console.log(chartType,chartElements)\r\n      const labels = chartElements.map((e,i)=>\"Element\"+i)\r\n      const colors = chartElements.map(e=>{\r\n        const r = Math.floor(Math.random() * 255);\r\n        const g = Math.floor(Math.random() * 255);\r\n        const b = Math.floor(Math.random() * 255);\r\n        return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n    }) \r\n      const data = chartType==='Bar'?{\r\n        labels,        \r\n        datasets: [\r\n          {\r\n            data: chartElements,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n        ],\r\n      }:{\r\n        labels,        \r\n        datasets: [\r\n          {\r\n            data: chartElements,\r\n            backgroundColor: colors,\r\n            borderColor: colors,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n    \r\n    \r\n    \r\n    return (\r\n    <div>\r\n        <div>\r\n            {chartType==='Bar'?<Bar data={data}/>:<Pie data = {data}/>}\r\n            {/*chart library use*/}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBox","import React,{useState,useEffect} from 'react'\nimport ChartBox from './ChartBox';\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  //fetch the data\n  useEffect(() => \n    getData(),[])\n  \n  const fetchURL = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/chart2986176.json'\n  const getData = async() =>{\n    const response = await axios.get(fetchURL)\n    setData(response.data)\n  }\n  \n\n  return (\n    <>\n    {data.map((entry) => {\n      return(\n      <ChartBox type={entry.type} elements = {entry.elements}/>\n      )\n    })}\n\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}